package poly.controller;

import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.beans.factory.annotation.Autowired;


import poly.service.impl.KakaoService;

@Controller
public class KakaoController {

	 @Autowired
	    private KakaoService kakao;
	    
	    @RequestMapping(value="/")
	    public String index() {
	        
	        return "index";
	    }
	

	    @RequestMapping(value="/kakaologin")
	    public String login(@RequestParam("code") String code, HttpSession session) {
	        String access_Token = kakao.getAccessToken(code);
	        HashMap<String, Object> UserInfo = kakao.getUserInfo(access_Token);
	        System.out.println("login Controller : " + UserInfo);
	        
	        //    클라이언트의 이메일이 존재할 때 세션에 해당 이메일과 토큰 등록
	        if (UserInfo.get("email") != null) {
	            session.setAttribute("UserId", UserInfo.get("Email"));
	            session.setAttribute("access_Token", access_Token);
	        }
	        return "index";
	    }


	
	
	//카카오톡 관련 로그아웃 메소드
    	@RequestMapping("kakao_logout.do")
    public String kakao_logout(HttpSession session, HttpServletRequest request) {
        
        //세션에 담긴값 초기화
        session.invalidate();
        
        return "home";
    }

	
	
}
